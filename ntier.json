{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creating a ntier network",
    "Parameters": {
        "vpccidr": {
            "Description": "this is vpc cidr parameter",
            "Type": "String",
            "Default": "10.0.0.0/16"
        },
        "web1az": {
            "Description": "this is web1 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "web2az": {
            "Description": "this is web2 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "app1az": {
            "Description": "this is app1 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "app2az": {
            "Description": "this is app2 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db1az": {
            "Description": "this is db1 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "db2az": {
            "Description": "this is db2 parameter",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierVPC"
                    }
                ]
            }
        },
        "websubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1_subnet"
                    }
                ]
            }
        },
        "websubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "web2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2_subnet"
                    }
                ]
            }
        },
        "appsubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "app1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app1_subnet"
                    }
                ]
            }
        },
        "appsubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "app2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app2_subnet"
                    }
                ]
            }
        },
        "dbsubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db1az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1_subnet"
                    }
                ]
            }
        },
        "dbsubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "db2az"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Fn::Cidr": [
                                {
                                    "Ref": "vpccidr"
                                },
                                6,
                                8
                            ]
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2_subnet"
                    }
                ]
            }
        },
        "webnacl": {
            "Description": "this is for webnacl",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Webnacl"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "webnaclinboundinternal": {
            "Description": "this is to allow all internal traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "RuleNumber": 100,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": {
                    "Ref": "vpccidr"
                }
            }
        },
        "webnaclallhttp": {
            "Description": "this is to allow all http traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "RuleNumber": 105,
                "Protocol": 6,
                "PortRange": {
                    "From": 80,
                    "To": 80
                },
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "webnaclallexternal": {
            "Description": "this is to allow all outbound traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "RuleNumber": 100,
                "Egress": true,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "web1naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "SubnetId": {
                    "Ref": "websubnet1"
                }
            }
        },
        "web2naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "webnacl"
                },
                "SubnetId": {
                    "Ref": "websubnet2"
                }
            }
        },
        "appnacl": {
            "Description": "this nacl is for app subnets",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsubnetsnacl"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "appnaclallinternal": {
            "Description": "this is to allow all internal traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "RuleNumber": 100,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": {
                    "Ref": "vpccidr"
                }
            }
        },
        "appnaclallexternal": {
            "Description": "this is to allow all outbound traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "RuleNumber": 100,
                "Egress": true,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "app1naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "SubnetId": {
                    "Ref": "appsubnet1"
                }
            }
        },
        "app2naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "appnacl"
                },
                "SubnetId": {
                    "Ref": "appsubnet2"
                }
            }
        },
        "dbnacl": {
            "Description": "this nacl is for db subnets",
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsubnetsnacl"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "dbnaclallinternal": {
            "Description": "this is to allow all internal traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "RuleNumber": 100,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": {
                    "Ref": "vpccidr"
                }
            }
        },
        "dbnaclallexternal": {
            "Description": "this is to allow all outbound traffic",
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "RuleNumber": 100,
                "Egress": true,
                "Protocol": -1,
                "RuleAction": "allow",
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "db11naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "SubnetId": {
                    "Ref": "dbsubnet1"
                }
            }
        },
        "db2naclsubnetassociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "dbnacl"
                },
                "SubnetId": {
                    "Ref": "dbsubnet2"
                }
            }
        },
        "sgforall": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "sgforall",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "openall",
                        "FromPort": 22,
                        "IpProtocol": "TCP",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "openall",
                        "FromPort": 80,
                        "IpProtocol": "TCP",
                        "ToPort": 80
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "sg"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "sgforappsubnets": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "sgforappsubnets8080",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "Description": "openappsg",
                        "FromPort": 8080,
                        "IpProtocol": "TCP",
                        "ToPort": 8080
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsgfor8080"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "sgfordbsubnets": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "sgfordbsubnets3306",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "Description": "opendbsg",
                        "FromPort": 3306,
                        "IpProtocol": "TCP",
                        "ToPort": 3306
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsgfor3306"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        }
    }
}